@startuml 系统通信流
skinparam backgroundColor transparent

|客户端A\n(Kinect用户)|
start
:输入会议信息;
:初始化摄像头设备;
if (设备类型) then (Kinect)
  :配置Kinect参数;
  :启动多模态采集;
else (标准摄像头)
  :启动标准视频采集;
endif
:连接到信令服务器;

|信令服务器|
:验证用户信息;
:创建/加入房间;
:广播用户加入事件;

|客户端B\n(标准用户)|
:接收新用户通知;
:准备接收连接;

|信令服务器|
:转发连接请求;

|客户端A\n(Kinect用户)|
:创建PeerConnection;
:生成SDP Offer;
:发送Offer到信令服务器;

|信令服务器|
:转发SDP Offer;

|客户端B\n(标准用户)|
:接收SDP Offer;
:创建PeerConnection;
:设置远程描述;
:生成SDP Answer;
:发送Answer到信令服务器;

|信令服务器|
:转发SDP Answer;

|客户端A\n(Kinect用户)|
:接收SDP Answer;
:设置远程描述;

|客户端A\n(Kinect用户)|
:收集ICE候选;
:发送ICE候选到信令服务器;

|信令服务器|
:转发ICE候选;

|客户端B\n(标准用户)|
:接收ICE候选;
:添加ICE候选;
:收集ICE候选;
:发送ICE候选到信令服务器;

|信令服务器|
:转发ICE候选;

|客户端A\n(Kinect用户)|
:接收ICE候选;
:添加ICE候选;
:建立P2P连接;
:创建专用数据通道;
if (视图模式) then (彩色视频)
  :启动视频流传输;
else (点云模式)
  :启动点云数据传输;
endif

|WebRTC P2P通道|
:传输加密媒体数据;
:实时网络质量监控;
:动态带宽调整;

|客户端B\n(标准用户)|
:接收远程媒体流;
if (收到数据类型) then (视频流)
  :渲染视频画面;
else (点云数据)
  :初始化Three.js渲染器;
  :处理点云数据;
  :渲染3D点云视图;
endif
:显示网络状态信息;

|客户端A\n(Kinect用户)|
:监控连接状态;
:调整传输参数;
if (检测到网络变化) then (网络变差)
  :应用降级策略;
  :调整数据压缩率;
else (网络改善)
  :提升传输质量;
endif

|信令服务器|
:心跳检测;
:处理状态变更;
:广播状态更新;
stop
@enduml
